# GPU preparing
import torch
import torch.nn as nn
import torchvision.transforms as transforms
import torchvision
from torchvision import transforms, datasets
import os,PIL,pathlib,warnings

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
device

# Import data
import os,PIL,random,pathlib
train_transforms = transforms.Compose([
  transforms.Resize([224, 224]),                   # 调整图片到统一尺寸
  transforms.ToTensor(),                           # convert PIL Image or numpy.ndarry into tensor
  transform.Normalize(                             # 标准化
    mean = [0.485, 0.456, 0.406],
    std = [0.229, 0.224, 0.225])
])

test_transforms = transforms.Compose([
  transforms.Resize([224, 224]),                   # 调整图片到统一尺寸
  transforms.ToTensor(),                           # convert PIL Image or numpy.ndarry into tensor
  transform.Normalize(                             # 标准化
    mean = [0.485, 0.456, 0.406],
    std = [0.229, 0.224, 0.225])
])

train_data = datasets.ImageFolder('./GLBD-n/train/', transform=train_transforms)
test_data = datasets.ImageFolder('./GLBD-n/test/', transform=test_transforms)

train_data.class_to_idx
